@page "/admin/categories/details/{id:long}"

@if(Category != null){
    <h1 class="bg-secondary text-white text-center p-1">@Category?.Name</h1>
    <table class="table table-sm table-bordered table-striped">
        <tbody>
            @if (Category?.Products?.Count() > 0)
            {
                @foreach (Product p in Category.Products)
                {
                    <tr>
                        <td>@p.ProductId</td>
                        <td>@p.Name</td>
                        <td>@p.Category.Name</td>
                        <td>@p.Supplier.Name</td>
                        <td>@p.Price.ToString("c")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No Products</td>
                </tr>
            }
        </tbody>
    </table>
}
else {
    <h1 class="bg-danger text-white text-center p-1">There is no Category with Id @Id</h1>
}

<NavLink class="btn btn-warning" href="@GetEditUrl">Edit</NavLink>
<NavLink class="btn btn-secondary" href="/admin/categories">Back</NavLink>


@code {
    [Inject]
    private ICategoryRepository _repository { get; set; }

    [Parameter]
    public long Id { get; set; }

    public Category? Category { get; set; }

    protected override void OnParametersSet()
    {
        Category = _repository.Categories.Include(c => c.Products).ThenInclude(p => p.Supplier).FirstOrDefault(c => c.CategoryId == Id);
    }

    public string GetEditUrl => $"/admin/categories/edit/{Id}";
}
